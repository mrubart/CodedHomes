@model CodedHomes.Web.ViewModels.HomeViewModel

@section styles
{
    <style>
        #success-msg-container,
        #fail-msg-container,
        #delete-msg-container,
        #img-fail-msg-container {
            display: none;
        }
    </style>
}

@section scripts{
    <script>
        $(function() {
            var homeDataForm = $("#home-data-form")[0],
                progressBar = $('#progress-bar');

            var Home = function() {
                this.id = ko.observable("@Model.Home.Id");
                this.streetAddress = ko.observable("@Model.Home.StreetAddress");
                this.streetAddress2 = ko.observable("@Model.Home.StreetAddress2");
                this.city = ko.observable("@Model.Home.City");
                this.zipCode = ko.observable("@Model.Home.ZipCode");
                this.bedrooms = ko.observable("@Model.Home.Bedrooms");
                this.bathrooms = ko.observable("@Model.Home.Bathrooms");
                this.squareFeet = ko.observable("@Model.Home.SquareFeet");
                this.price = ko.observable("@Model.Home.Price");
                this.description = ko.observable("@Model.Home.Description");
                this.imageName = ko.observable("@Model.Home.ImageName");
                this.imageUrl = ko.computed({
                    read: function() {
                        var fileName = (this.imageName() === '') ? 'no-image-large.png' : this.imageName(),
                            url = '@Model.ImageUrlPrefix' + fileName;
                        return url;
                    },
                    write: function(value) {
                        var parts = value.split('/');
                        this.imageName(parts[parts.length - 1]);
                    },
                    owner: this
                });
            };

            var ViewModel = function(home) {
                this.model = home;
                this.errorMessage = ko.observable();
                this.hideProgressBar = function(showAfterHideFunc) {};
                this.showError = function(error) {};

                this.hideProgressBar = function (showAfterHideFunc) {
                    progressBar.fadeOut(function () {
                        showAfterHideFunc();
                    });
                };

                this.showError = function (error) {
                    var resetUI = function () {
                        $('#command-buttons').fadeIn();
                        $('#fail-msg-container').fadeIn();
                    };

                    vm.hideProgressBar(resetUI);

                    if (error.statusText) {
                        vm.errorMessage(error.statusText);
                    }

                    if (error.responseText) {
                        var
                            msg = JSON.parse(error.responseText),
                            keys = _.keys(msg),
                            txt = '';

                        _.each(keys, function (key) {
                            txt += msg[key] + ' ';
                        });
                        vm.errorMessage(txt);
                    }
                };

                this.showImageUpload = function () {
                    $('#upload-button').show();
                    $('#upload-form-container').removeClass('none');
                };

                this.hideImageUpload = function() {
                    $('#upload-button').hide();
                    $('#upload-form-container').addClass('none');
                };

                this.showImageError = function (error) {
                    $('#img-fail-msg-container').fadeIn();
                    vm.errorMessage(error.statusText);
                };

                this.showSuccess = function () {
                    var resetUI = function () {
                        $('#command-buttons').fadeIn();
                        $('#fail-msg-container').fadeOut();
                        $('#delete-msg-container').fadeOut();
                        $('#success-msg-container').fadeIn();
                    };

                    vm.hideProgressBar(resetUI);

                    $("#upload-form")[0].reset();

                    var fadeOut = function () {
                        $('#success-msg-container').fadeOut();
                    };

                    _.delay(fadeOut, 5000);
                };

                this.showDelete = function () {
                    $('#fail-msg-container').fadeOut();
                    $('#delete-msg-container').fadeIn();

                    $('.cmd').each(function (i, element) {
                        $(element).prop('disabled', true).addClass('muted');
                    });
                }


                this.uploadImage = function() {
                    if (window.FormData !== undefined) {
                        var data = new FormData(),
                            file = $('#image-upload')[0].files[0];

                        data.append('image', file);
                        data.append('id', vm.model.id());

                        return homesDataService.saveImage(data);
                    }
                };

                this.hasImageToUpload = function() {
                    return $('#image-upload')[0].files.length > 0;
                };

                this.save = function () {
                    debugger;

                    vm.hideImageUpload();
                    var validationUtility = new ValidationUtility();

                    if (validationUtility.validate('home-data-form')) {
                        $('#command-buttons').hide();
                        $('#progress-bar').fadeIn();

                        var home = ko.toJS(this.model);

                        homesDataService.save(home).done(function(response) {
                            if (response.id) {
                                vm.model.id(response.id);
                            }

                            if (vm.hasImageToUpload()) {
                                vm.uploadImage().done(function(result) {
                                    if (result.status === 'error') {
                                        ViewModel.showImageError(result);
                                    } else {
                                        vm.model.imageUrl(result.imageUrl);
                                        vm.showSuccess();
                                    }
                                }).fail(function(error) {
                                    vm.showImageError();
                                });
                            } else {
                                vm.showSuccess();
                            }
                        }).fail(function(error) {
                            vm.showError(error);
                        });
                    }
                };

                this.requestDelConfirm = function() {
                    $('#del-confirm').modal();
                };

                this.del = function() {
                    var home = ko.toJS(this.model);
                    homesDataService.del(home).done(function(response) {
                        vm.showDelete();
                    }).fail(function(error) {
                        vm.showError(error);
                    }).always(function() {
                        $('#del-confirm').modal('hide');
                    });
                };
            };

            var vm = new ViewModel(new Home());
            ko.applyBindings(vm);

            H5F.setup([homeDataForm], {
                validClass: "valid",
                invalidClass: "invalid",
                requiredClass: "required"
            });

        });
    </script>
}
<div class="row">
    <div class="col-sm-5 mobile-push-down">
        <div class="row">
            <div class="col-sm-10">
                <img data-bind="attr:{src:model.imageUrl}" class="fancy" />
            </div>
            <button id="upload-button" data-bind="click: showImageUpload" class="btn btn-xs push-down">
                <i class="glyphicon glyphicon-upload"></i>Upload Image
            </button>
            <div id="upload-form-container" class="none alert alert-success push-down">
                <form id="upload-form" action="/homes/uploadimage" method="POST" enctype="multipart/form-data">
                    <button class="btn btn-xs pull-right" data-bind="click: hideImageUpload">x</button>
                    <input id="image-upload" type="file" name="image" />
                </form>
            </div>
        </div>
    </div>
    <div id="img-fail-msg-container" class="alert alert-danger push-down">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <h4>Error</h4>
        <p>
            Oops, something bad happened! :( This is what the server had to say about it:
        </p>
        <p data-bing="text: errorMessage"></p>
    </div>
    <form id="home-data-form">
        <div class="col-sm-5 mobile-push-right">
            <div class="row">
                <div class="col-sm-11">
                    <input id="streetAddress" name="streetAddress" data-bind="value: model.streetAddress"
                           type="text" class="full" autofocus data-role="validate" title="Street Address"
                           data-content="The Street Address is required" placeholder="street address" required />
                    <br />
                    <input id="streetAddress2" name="streetAddress2" data-bind="value: model.streetAddress2"
                           type="text" class="full" placeholder="suite, apt. #, etc." />
                    <br />
                    <input id="city" name="city" data-bind="value: model.city"
                           type="text" class="small" data-role="validate" title="City"
                           data-content="City is required" placeholder="city" required /> UT
                    
                    <input id="zipCode" name="zipCode" data-bind="value: model.zipCode"
                           type="number" class="no-spin small push-right" data-role="validate" title="Zip Code"
                           data-content="Zip Code is required" placeholder="zip code" required />
                </div>
            </div>
            <hr />
            <div class="row stats">
                <div class="col-sm-3"><label for="price">Price</label></div>
                <div class="col-sm-6">
                    <input data-bind="value: model.price"
                           title="Price" data-role="validate" data-content="Price is required." id="price" name="price"
                           type="number" class="no-spin small" required>
                </div>
            </div>
            <div class="row stats">
                <div class="col-sm-3"><label for="bedrooms">Bedrooms</label></div>
                <div class="col-sm-6">
                    <input data-bind="value: model.bedrooms"
                           title="Bedrooms" data-role="validate" data-content="The number of bedrooms is required." id="bedrooms" name="bedrooms"
                           type="number" class="no-spin small" required>
                </div>
            </div>
            <div class="row stats">
                <div class="col-sm-3"><label for="bathrooms">Bathrooms</label></div>
                <div class="col-sm-6">
                    <input data-bind="value: model.bathrooms"
                           title="Bathrooms" data-role="validate" data-content="The number of bathrooms is required." id="bathrooms" name="bathrooms"
                           type="number" class="no-spin small" required>
                </div>
            </div>
            <div class="row stats">
                <div class="col-sm-3"><label for="square-feet">Square Feet</label></div>
                <div class="col-sm-6">
                    <input data-bind="value: model.squareFeet"
                           title="Square Feet" data-role="validate" data-content="The square feet of the home is required." id="square-feet" name="square-feet"
                           type="number" class="no-spin small" required>
                </div>
            </div>
            <div class="row stats">
                <div class="col-sm-3"><label for="description">Description</label></div>
                <div class="col-sm-6">
                    <textarea data-bind="value: model.description"
                              title="Description" data-role="validate" data-content="A description is required." id="description" name="description"
                              class="full" required></textarea>
                </div>
            </div>

            <hr />

            @if (Model.CanEdit)
            {
                <div class="row">
                    <div class="col-sm-11">
                        <div id="progress-bar" class="progress progress-striped active fade-amin none">
                            <div class="progress-bar" style="width: 100%;"></div>
                        </div>
                        <div id="command-buttons" class="pull-right">
                            @if (Model.CanDelete && !Model.IsNew)
                            {
                                <a href="#" id="delete-link" class="cmd" data-bind="click: requestDelConfirm" tabindex="-1">Delete</a>
                            }
                            <button data-bind="click: save" type="button" class="btn btn-primary btn-lg push-right cmd">Save</button>
                        </div>
                    </div>
                </div>
            }

            <!--messages-->
            <div class="row">
                <div id="success-msg-container" class="col-sm-11 alert alert-success push-down">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <h4>Changes Saved</h4>
                    <p>
                        The home information is saved.
                        You can @Html.ActionLink("add another home", "new", "Homes") or @Html.ActionLink("return to the homes list", "Index", "Homes") if you wish.
                    </p>
                </div>
            </div>

            <div class="row">
                <div id="fail-msg-container" class="col-sm-11 alert alert-danger push-down">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <h4>Error</h4>
                    <p>
                        Oops, something bad happened. :)
                        This is what the server had to say about it:
                    </p>
                    <p data-bind="text: errorMessage"></p>
                </div>
            </div>
            <div class="row">
                <div id="delete-msg-container" class="col-sm-11 alert push-down">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                    <h4>Home Deleted</h4>
                    <p>The home is now removed from the system.</p>
                    <p>
                        You can return to the @Html.ActionLink("full homes list", "Index", "Homes") or @Html.ActionLink("add a new home", "new", "Homes").
                    </p>
                </div>
            </div>
            <!--/message containers-->
        </div>
    </form>
</div>

<div id="del-confirm" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="del-confirm-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                <h3 id="del-confim-label">Confirm Delete</h3>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this home?</p>
                <p class="alert alert-danger push-down"><strong>Note:</strong>There is no undo for this action.</p>
            </div>
            <div class="modal-footer">
                <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                <button class="btn btn-primary" data-bind="click: del">Delete Home</button>
            </div>
        </div>
    </div>
</div>
